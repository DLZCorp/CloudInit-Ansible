#  Customize BASH PS1 prompt to show current GIT repository and branch.
#  by Mike Stewart - http://MediaDoneRight.com

#  SETUP CONSTANTS
#  Bunch-o-predefined colors.  Makes reading code easier than escape sequences.
#  I don't remember where I found this.  o_O

# Reset
Color_Off="\[\033[0m\]"       # Text Reset

# Regular Colors
Black="\[\033[0;30m\]"        # Black
Red="\[\033[0;31m\]"          # Red
Green="\[\033[0;32m\]"        # Green
Yellow="\[\033[0;33m\]"       # Yellow
Blue="\[\033[0;34m\]"         # Blue
Purple="\[\033[0;35m\]"       # Purple
Cyan="\[\033[0;36m\]"         # Cyan
White="\[\033[0;37m\]"        # White

# Bold
BBlack="\[\033[1;30m\]"       # Black
BRed="\[\033[1;31m\]"         # Red
BGreen="\[\033[1;32m\]"       # Green
BYellow="\[\033[1;33m\]"      # Yellow
BBlue="\[\033[1;34m\]"        # Blue
BPurple="\[\033[1;35m\]"      # Purple
BCyan="\[\033[1;36m\]"        # Cyan
BWhite="\[\033[1;37m\]"       # White

# Underline
UBlack="\[\033[4;30m\]"       # Black
URed="\[\033[4;31m\]"         # Red
UGreen="\[\033[4;32m\]"       # Green
UYellow="\[\033[4;33m\]"      # Yellow
UBlue="\[\033[4;34m\]"        # Blue
UPurple="\[\033[4;35m\]"      # Purple
UCyan="\[\033[4;36m\]"        # Cyan
UWhite="\[\033[4;37m\]"       # White

# Background
On_Black="\[\033[40m\]"       # Black
On_Red="\[\033[41m\]"         # Red
On_Green="\[\033[42m\]"       # Green
On_Yellow="\[\033[43m\]"      # Yellow
On_Blue="\[\033[44m\]"        # Blue
On_Purple="\[\033[45m\]"      # Purple
On_Cyan="\[\033[46m\]"        # Cyan
On_White="\[\033[47m\]"       # White

# High Intensty
IBlack="\[\033[0;90m\]"       # Black
IRed="\[\033[0;91m\]"         # Red
IGreen="\[\033[0;92m\]"       # Green
IYellow="\[\033[0;93m\]"      # Yellow
IBlue="\[\033[0;94m\]"        # Blue
IPurple="\[\033[0;95m\]"      # Purple
ICyan="\[\033[0;96m\]"        # Cyan
IWhite="\[\033[0;97m\]"       # White

# Bold High Intensty
BIBlack="\[\033[1;90m\]"      # Black
BIRed="\[\033[1;91m\]"        # Red
BIGreen="\[\033[1;92m\]"      # Green
BIYellow="\[\033[1;93m\]"     # Yellow
BIBlue="\[\033[1;94m\]"       # Blue
BIPurple="\[\033[1;95m\]"     # Purple
BICyan="\[\033[1;96m\]"       # Cyan
BIWhite="\[\033[1;97m\]"      # White

# Background Greys
On_Grey232="\[\033[48;5;232m\]"
On_Grey233="\[\033[48;5;233m\]"
On_Grey234="\[\033[48;5;234m\]"
On_Grey235="\[\033[48;5;235m\]"
On_Grey236="\[\033[48;5;236m\]"
On_Grey237="\[\033[48;5;237m\]"
On_Grey238="\[\033[48;5;238m\]"
On_Grey239="\[\033[48;5;239m\]"
On_Grey240="\[\033[48;5;240m\]"
On_Grey241="\[\033[48;5;241m\]"
On_Grey242="\[\033[48;5;242m\]"
On_Grey243="\[\033[48;5;243m\]"
On_Grey244="\[\033[48;5;244m\]"
On_Grey245="\[\033[48;5;245m\]"
On_Grey246="\[\033[48;5;246m\]"
On_Grey247="\[\033[48;5;247m\]"

# Foreground Greys
Grey232="\[\033[38;5;232m\]"
Grey233="\[\033[38;5;233m\]"
Grey234="\[\033[38;5;234m\]"
Grey235="\[\033[38;5;235m\]"
Grey236="\[\033[38;5;236m\]"
Grey237="\[\033[38;5;237m\]"
Grey238="\[\033[38;5;238m\]"
Grey239="\[\033[38;5;239m\]"
Grey240="\[\033[38;5;240m\]"
Grey241="\[\033[38;5;241m\]"
Grey242="\[\033[38;5;242m\]"
Grey243="\[\033[38;5;243m\]"
Grey244="\[\033[38;5;244m\]"
Grey245="\[\033[38;5;245m\]"
Grey246="\[\033[38;5;246m\]"
Grey247="\[\033[38;5;247m\]"

# High Intensty backgrounds
On_IBlack="\[\033[0;100m\]"   # Black
On_IRed="\[\033[0;101m\]"     # Red
On_IGreen="\[\033[0;102m\]"   # Green
On_IYellow="\[\033[0;103m\]"  # Yellow
On_IBlue="\[\033[0;104m\]"    # Blue
On_IPurple="\[\033[10;95m\]"  # Purple
On_ICyan="\[\033[0;106m\]"    # Cyan
On_IWhite="\[\033[0;107m\]"   # White

function prompt {
    local SEP=''
    local BGNONE="\[\033[0m\]"
    PS1="\n$(if [[ ${EUID} == 0 ]]; then echo "$IWhite$On_Red\342\224\214$IYellow$On_Red\u@\h $Red"; else echo "$Red$On_Black\342\224\214$IGreen$On_Black\u@\h $Black"; fi)$On_Grey236$SEP \$(if [[ \$? == 0 ]]; then echo \"$IGreen$On_Grey236\342\234\223\"; else echo \"$Red$On_Grey236\342\234\227\"; fi) $Grey236$On_Grey240$SEP$IYellow$On_Grey240 \t \d $Grey240$On_Grey244$SEP $IGreen$On_Grey244\[Jobs:\j\] $Color_Off$Grey244$SEP"
    PS1+="\n$(if [[ ${EUID} == 0 ]]; then echo "$IWhite$On_Red\342\224\224\342\224\200 $Cyan$On_Red\\w $Red"; else echo "$Red$On_Black\342\224\224""\342\224\200 "$Cyan$On_Black\\w $Black; fi)$On_Grey236$SEP $ICyan$On_Grey236\$(ls -1 | wc -l | sed 's: ::g') files, \$(ls -lah | grep -m 1 total | sed 's/total //')b "
    PS1+='$(git branch &>/dev/null;\
    if [ $? -eq 0 ]; then \
        echo "$(echo `git status` | grep "nothing to commit" > /dev/null 2>&1; \
        if [ "$?" -eq "0" ]; then \
            # @4 - Clean repository - nothing to commit
            echo "'$Grey236$On_Grey240$SEP$IGreen$On_Grey240'"  $(__git_ps1 " %s"); \
        else \
            # @5 - Changes to working tree
            echo "'$Grey236$On_Grey240$SEP$IRed$On_Grey240'"  $(__git_ps1 " %s"); \
        fi) '$Color_Off$Grey240$SEP$Color_Off'"; \
    else \
        # @2 - Prompt when not in GIT repo
        echo "'$Color_Off$Grey236$SEP$Color_Off' "; \
    fi)'
    export PS1
}

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
  # We have color support; assume it's compliant with Ecma-48
  # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
  # a case would tend to support setf rather than setaf.)
  color_prompt=yes
else
  color_prompt=
fi


if [ "$color_prompt" = yes ]; then
    #Prompt and prompt colors
    function FG_COLOR () { echo -ne "\[\033[38;5;$1m\]"; }
    function BG_COLOR () { echo -ne "\[\033[48;5;$1m\]"; }
    if [ -x /usr/games/cowsay -a -x /usr/games/fortune ]; then
        fortune | cowsay
    fi

    prompt
else
    PS1='${debian_chroot:+($debian_chroot)}\h:\w\$ '
fi

#unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
  xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
  *)
    ;;
esac
